---
- name: archlinux setup
  hosts: localhost
  connection: local
  tasks:
    - block:
        - name: Include multilib repository
          become: true
          lineinfile:
            path: /etc/pacman.conf
            line: "[multilib]\nInclude = /etc/pacman.d/mirrorlist"
            state: present

        - name: Include ILoveCandy progress bar
          become: true
          lineinfile:
            path: /etc/pacman.conf
            regexp: "^#NoProgressBar"
            line: "ILoveCandy"

        - name: Include Color
          become: true
          lineinfile:
            path: /etc/pacman.conf
            regexp: "^#Color"
            line: "Color"

        - name: Include ParallelDownloads
          become: true
          lineinfile:
            path: /etc/pacman.conf
            regexp: "^#ParallelDownloads"
            line: "ParallelDownloads = 8"

        - name: Install arch linux keyring
          become: true
          pacman:
            name: archlinux-keyring
            state: present

        - name: Full system update
          become: true
          pacman:
            update_cache: yes
            upgrade: yes

        - name: Remove conflict packages
          become: true
          pacman:
            name:
              - nvidia
            state: removed
            force: yes

        - name: Install packages
          become: true
          pacman:
            name: "{{ item }}"
            state: present
          loop:
            - base-devel
            - linux-headers
            - nvidia-dkms
            - nvidia-utils
            - lib32-nvidia-utils
            - amd-ucode
            - git
            - curl
            - wget
            - net-tools
            - openssh
            - tmux
            - zip
            - unzip
            - unrar
            - p7zip
            - android-tools
            - rclone
            - yt-dlp
            - hping
            - nmap
            - whois
            - tor
            - go
            - jdk-openjdk
            - maven
            - docker
            - docker-compose
            - pacman-contrib
            - bash-completion
            - btop
            - cpupower
            - ttf-inconsolata
            - ttf-cascadia-code
            - ttf-fira-code
            - ttf-fira-mono
            - gedit
            - gparted
            - gnome-tweaks
            - grub-customizer
            - flameshot
            - qbittorrent
            - sqlitebrowser
            - firefox
            - lutris
            - scrcpy
            - peek
            - telegram-desktop
            - obs-studio
            - remmina
            - nvidia-settings
            - nvidia-prime
            - nvidia-cg-toolkit
            - vulkan-headers
            - vulkan-radeon
            - lib32-vulkan-radeon
            - vulkan-icd-loader
            - lib32-vulkan-icd-loader
            - mesa
            - lib32-mesa
            - figlet
            - lolcat
            - gnome-firmware
            - gnome-power-manager
            - vagrant
            - archlinux-wallpaper
            - neovim
            - ntfs-3g
            - psensor
            - upower
            - zsh-autosuggestions
            - zsh-completions
            - zsh-syntax-highlighting
            - dbeaver
            - discord
            - dconf
            - dconf-editor
            - kdiskmark
            - gnome-logs
            - terminator
            - wine
            - winetricks
            - wine-mono
            - wine-gecko
            - vkd3d
            - jq
            - mlocate
            - man-db
            - tree
            - dnsmasq
            - virt-manager
            - dnsutils
            - gst-plugins-good
            - gst-plugin-pipewire
            - gstreamer-vaapi
            - libva
            - libva-mesa-driver
            - lib32-pipewire
            - lib32-pipewire-jack
            - procs
            - sd
            - dust
            - bandwhich
            - grex
            - git-delta
            - ripgrep
            - bat
            - exa
            - fd
            - ncdu
            - duf
            - zbarimg
            - pavucontrol

    - block:
        - name: Adding existing user to group Docker
          become: true
          user:
            name: "{{ ansible_user_id }}"
            groups: docker
            append: yes

    - block:
        - name: Add GPG Key Spotify
          shell:
            cmd: curl -sS https://download.spotify.com/debian/pubkey_0D811D58.gpg | gpg --import -

        - name: Install YAY [AUR Helper]
          become: true
          aur: name=yay user={{ ansible_user_id }}

        - name: Install AUR packages
          become: true
          aur: name={{ item }} user={{ ansible_user_id }} skip_pgp=yes
          loop:
            - optimus-manager
            - optimus-manager-qt
            - ttf-meslo-nerd-font-powerlevel10k
            - zsh-theme-powerlevel10k-git
            - asdf-vm
            - google-chrome
            - teams
            - onlyoffice-bin
            - gammy
            - spotify
            - vscodium-bin
            - diodon
            - mangohud-git 
            - lib32-mangohud-git
            - heroic-games-launcher-bin
            - heroku-cli
            - gpu-screen-recorder-git
            - gpu-screen-recorder-gtk-git
            - upscayl-bin
            - wd719x-firmware
            - upd72020x-fw
            - aic94xx-firmware
            - ulauncher
            - nbfc-linux

    - block:
        - name: Install vscodium extensions
          shell:
            cmd: codium --install-extension '{{ item }}'
          loop:
            - Arjun.swagger-viewer
            - CoenraadS.bracket-pair-colorizer-2
            - DotJoshJohnson.xml
            - dracula-theme.theme-dracula
            - esbenp.prettier-vscode
            - formulahendry.code-runner
            - foxundermoon.shell-format
            - franneck94.c-cpp-runner
            - GabrielBB.vscode-lombok
            - jbenden.c-cpp-flylint
            - llvm-vs-code-extensions.vscode-clangd
            - markwylde.vscode-filesize
            - mitaki28.vscode-clang
            - ms-azuretools.vscode-docker
            - ms-python.python
            - ms-toolsai.jupyter
            - ms-toolsai.jupyter-keymap
            - ms-toolsai.jupyter-renderers
            - mtxr.sqltools
            - Pivotal.vscode-spring-boot
            - PKief.material-icon-theme
            - qux-bbb.text-utils
            - redhat.java
            - redhat.vscode-xml
            - redhat.vscode-yaml
            - Remisa.shellman
            - usernamehw.commands
            - vadimcn.vscode-lldb
            - vscjava.vscode-java-debug
            - vscjava.vscode-java-dependency
            - vscjava.vscode-java-pack
            - vscjava.vscode-java-test
            - vscjava.vscode-maven
            - vscjava.vscode-spring-boot-dashboard
            - vscjava.vscode-spring-initializr

        - name: Copy vscodium config file
          copy: 
            src: files/vscodium-config.json
            dest: /home/{{ ansible_user_id }}/.config/VSCodium/User/settings.json
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_id }}"
            mode: 0644

    - block:
        - name: Verify if Oh-My-zsh is installed
          command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
          register: ohmyzsh
          ignore_errors: true

        - name: Installing Oh-My-zsh
          shell:
            cmd: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'
            warn: false
          when: ohmyzsh.rc != 0

        - name: Changing Default Shell to ZSH
          become: yes
          user:
            name: "{{ ansible_user_id }}"
            shell: /bin/zsh

        - name: Include powerlevel10k and completions to zshrc
          lineinfile:
            path: /home/{{ ansible_user_id }}/.zshrc
            line: "source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme\nsource /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh\nsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\nautoload -Uz compinit\ncompinit"
            state: present

        - name: Include asdf configurations zshrc
          lineinfile:
            path: /home/{{ ansible_user_id }}/.zshrc
            line: "# ------------------------------------ ASDF ---------------------------------------------- #\n. /opt/asdf-vm/asdf.sh"
            state: present

        - name: Add git, docker-compose and maven plugins to zshrc
          lineinfile:
            path: /home/{{ ansible_user_id }}/.zshrc
            regexp: "^plugins="
            line: "plugins=(git docker-compose mvn)"

    - block:
        - name: Copy my personal binaries to local/bin
          copy: 
            src: files/bin/
            dest: /home/{{ ansible_user_id }}/.local/bin/
            owner: "{{ ansible_user_id }}"
            group: "{{ ansible_user_id }}"
            mode: u=rwx,g=rx,o=rx